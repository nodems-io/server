import { MigrationInterface, QueryRunner } from "typeorm";

export class AddServerAndDatacenterTables1747074003380 implements MigrationInterface {
    name = 'AddServerAndDatacenterTables1747074003380'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "datacenters" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying(255), "location" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_844148292b0ddec4e012044135c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "servers" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying(255), "ip_address" character varying(255), "os" character varying(255), "cpu" integer, "memory" integer, "disk" integer, "status" character varying(255), "hostname" character varying(255), "username" character varying(255), "password" character varying(255), "ssh_key" character varying(255), "ssh_port" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "datacenter_id" integer, CONSTRAINT "PK_c0947efd9f3db2dcc010164d20b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "servers" ADD CONSTRAINT "FK_6448b514131121fb564c0cc5670" FOREIGN KEY ("datacenter_id") REFERENCES "datacenters"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "servers" DROP CONSTRAINT "FK_6448b514131121fb564c0cc5670"`);
        await queryRunner.query(`DROP TABLE "servers"`);
        await queryRunner.query(`DROP TABLE "datacenters"`);
    }

}
